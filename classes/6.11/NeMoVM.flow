import runtime;
import lingo/pegcode/driver;

VMProgram (
	operators : [VMOperator],
	declarations : [Declaration]
);

VarType ::= ArrayType, Int;

ArrayType(
	elType : VarType
);

Int();

Declaration(
	name : string,
	type : VarType
);

VMOperator(
	label : int,
	command : VMCommand
);

VMCommand ::= Assignment, ConditionOp, Print;

Assignment(
	varName : string,
	expr : Expr,
	goto : [int]
);

ConditionOp(
	cond : Condition,
	gotoThen : [int],
	gotoElse : [int]
);

Print(
	expr : Expr,
	goto : [int]
);

BinOp(
	op : string,
	lhs : Expr,
	rhs : Expr
);

Condition (
	op : string,
	lhs : Expr,
	rhs : Expr
);

Expr ::= Constant, Variable, App, Upd, BinOp;

Constant (
	val : int
);

Variable (
	name : string
);

App(
	firstArg : Expr,
	secondArg : Expr
);

Upd(
	firstArg : Expr,
	secondArg : Expr,
	thirdArg : Expr
);

s2prog(s : string) -> VMProgram{
	gram = "#include gramm.lingo";
	parsic(compilePegGrammar(gram), s, defaultPegActions)
}

getTestProgram() -> string{
	concatStrings(["var x:int; var array :  [  int   ];", "12   : string = string goto {};", "   345: if(a < b) then goto{} else goto {1,2,   3, 4,5};", "3 : print (hello) goto { 222  };"])
}

main(){
	println(s2prog("3: x = y goto {2, 2};"));
	println("\n");
	testDecl = "var x:int; var array :  [  int   ];";
	testAssign = "12   : string = string goto {};";
	testCond = "   345: if(a < b) then goto{} else goto {1,2,   3, 4,5};";
	testPrint = "3 : print (hello) goto { 222  };";
	testProgram = getTestProgram();
	println(s2prog(testDecl));
	println("\n");
	println(s2prog(testAssign));
	println("\n");
	println(s2prog(testCond));
	println("\n");
	println(s2prog(testPrint));
	println("\n");
	println(s2prog(testProgram));
	
	testPrintBug = "3 : print (a+b) goto { 222  };";
}